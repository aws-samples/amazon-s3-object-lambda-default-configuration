name: Default Config Integration Test
on:
  pull_request_target:
    types: [labeled]
  workflow_dispatch:

jobs:
  IntegrationTest:
    runs-on: ubuntu-latest
    if: ${{contains(github.event.pull_request.labels.*.name, 'safe to run test')}}
    permissions:
      id-token: write
      contents: read
      pull-requests: write
      statuses: write
    steps:
      - name: Check out pull request code base
        uses: actions/checkout@v2
        with:
          ref: ${{github.event.pull_request.head.ref}}
          repository: ${{github.event.pull_request.head.repo.full_name}}
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          aws-region: eu-west-1
          role-to-assume: arn:aws:iam::709260266534:role/GithubOIDC-Role-1I6OM883IKQHZ
          role-duration-seconds: 1200
          role-session-name: MySessionName
      - name: Generate a Template Key name
        run: echo TEMPLATE_KEY=template_$(openssl rand -hex 8).yaml >> $GITHUB_ENV
      - name: Template Upload to S3
        run: aws s3 cp ./template/s3objectlambda_defaultconfig.yaml s3://default-config-template/${{env.TEMPLATE_KEY}}
      - name: Set up NodeJS 14
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      - name: Generate a random name for Lambda function
        run: echo LAMBDA_NODE_KEY=function_$(openssl rand -hex 8).zip >> $GITHUB_ENV
      - name: Set up Node Lambda Function and upload to S3
        working-directory: functions/node_js_14.x
        run: |
          npm install
          npm run-script build
          mkdir -p release
          npm run-script package
          echo LAMBDA_VERSION=$(aws s3api put-object --bucket default-config-template --key ${{env.LAMBDA_NODE_KEY}} --body release/s3objectlambda_deployment_package.zip --output json | jq -r '.VersionId' ) >> $GITHUB_ENV
      - name: Set up JDK 16
        uses: actions/setup-java@v2
        with:
          java-version: '16'
          distribution: 'adopt'
#          cache: 'maven'
      - name: Build with Maven and run test
        run: mvn test -f tests/pom.xml -Dregion=eu-west-1 -DtemplateUrl=https://default-config-template.s3.eu-west-1.amazonaws.com/${{env.TEMPLATE_KEY}} -Ds3BucketName=default-config-template -DlambdaFunctionS3BucketName=default-config-template -DlambdaFunctionS3Key=${{env.LAMBDA_NODE_KEY}} -DcreateNewSupportingAccessPoint=true -DlambdaVersion=${{env.LAMBDA_VERSION}}
      - name: Check Test Result
        if: ${{ !failure() }}
        uses: actions-ecosystem/action-add-labels@v1
        with:
          labels: test pass
      - name: Check Test Result
        if: ${{ always() }}
        uses: actions-ecosystem/action-remove-labels@v1
        with:
          labels: safe to run test
#      - name: Publish Test Report
#        if: ${{ always() }}
#        uses: scacap/action-surefire-report@v1

